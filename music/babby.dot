##Command to produce the output: "dot -Tpng thisfile > thisfile.png"

digraph HeterodyneAdder {
    graph [fontsize=15 splines=true overlap=false rankdir = "LR"];

    subgraph cluster_inputs {
        rank=same;
        node [shape=box];  a;b;c;
    }

    {node [shape=diamond,style=filled,fontcolor=white,fillcolor=blue,label="+",height=.3,width=.3];
        add01; add02; add03; add04; add05; add06;}
    {node [shape=diamond,style=filled,fontcolor=white,fillcolor=red,label="-",height=.3,width=.3];
        sub01; sub03; sub04;}
    {node [shape=circle   fixedsize=true width=0.5 fontsize=15 fontcolor=darkgreen label=0]; e1;e2;e3;e4;}
    {node [shape=circle   fixedsize=true width=0.6 fontsize=9 fontcolor=darkgreen]; VIIII}
    {node [shape=triangle fixedsize=true width=0.4 style=filled fontcolor=white fillcolor=green label="" ];
        split_a;split_b;split_I;split_V;}

    a -> split_a;
    b -> split_b;
    /*
    ** Build the I-adder
    */
    subgraph cluster_add_Is {
        subgraph cluster_chewed_Is {
            rank=same;
            node [shape=circle fixedsize=true width=0.9]; ai;bi;ci;
        }
        {rank=same; e1 -> add01;}
        ai -> add01 -> add03;
                 bi -> add03 -> add05 -> sub01 -> split_I;
                          ci -> add05;
        {rank=same; e3 -> sub01;}
    }
    /*
    ** Feed the input into it
    */

    split_a->ai;
    split_b->bi;
    c->ci;

    /*
    ** Build the V adder
    */
    subgraph cluster_add_Vs {
        subgraph cluster_chewed_Vs {
            rank=same;
            node [shape=circle fixedsize=true width=0.9]; av;bv;
        }
        {rank=same; e2 -> add02;}
        av -> add02 -> add04 -> add06 -> sub03 -> split_V -> sub04;
                 bv -> add04;                       VIIII -> sub04;
        {rank=same; e4 -> sub03;}
    }
    /*
    ** Feed the inputs into it
    */
    split_a->av;
    split_b->bv;

    /*
    ** Group the output
    */
    subgraph cluster_results {
        rank=same;
        Ri; Rv; C;
    }
    /*
    ** Extract the results into the output
    */
    split_I -> Ri;
    split_I -> add06 [constraint=false];
    split_V -> Rv;
    sub04 -> C;

    overlap=false
    label="Harmonic Math"
    fontsize=24;
}
